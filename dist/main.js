(()=>{"use strict";var t={426:(t,n,r)=>{r.d(n,{Z:()=>s});var e=r(15),i=r.n(e),a=r(645),o=r.n(a)()(i());o.push([t.id,':root {\r\n\t--accent: #1b4965;\r\n\t--valid: #34d1bf;\r\n\t--invalid: #eb5160;\r\n}\r\n\r\n* {\r\n\tbox-sizing: border-box;\r\n\tfont-family: "Open Sans", sans-serif;\r\n}\r\n\r\nhtml,\r\nbody {\r\n\tmargin: 0;\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n}\r\n\r\n.input-container {\r\n\tdisplay: flex;\r\n\twidth: 100%;\r\n\tmargin-bottom: 1rem;\r\n\tposition: relative;\r\n}\r\n\r\nform {\r\n\twidth: 80%;\r\n\tmax-width: 600px;\r\n}\r\n\r\n.icon {\r\n\tpadding: 1rem;\r\n\twidth: 3rem;\r\n\tbackground: var(--accent);\r\n\tcolor: white;\r\n\ttext-align: center;\r\n\tborder-radius: 8px 0 0 8px;\r\n}\r\n\r\n.status-valid,\r\n.status-invalid {\r\n\tvisibility: hidden;\r\n\tposition: absolute;\r\n\tright: 1rem;\r\n\ttop: 0.9rem;\r\n\tfont-size: 1.25rem;\r\n}\r\n\r\n.status-valid {\r\n\tcolor: var(--valid);\r\n}\r\n\r\n.status-invalid {\r\n\tcolor: var(--invalid);\r\n}\r\n\r\n.input-field {\r\n\twidth: 100%;\r\n\tpadding: 10px;\r\n\toutline: none;\r\n\tborder: 2px solid lightgray;\r\n\tborder-left: 2px solid transparent;\r\n\tborder-radius: 0 8px 8px 0;\r\n}\r\n\r\n.input-field:focus {\r\n\tborder: 2px solid var(--accent);\r\n}\r\n\r\n#submit {\r\n\tbackground: var(--accent);\r\n\tcolor: white;\r\n\tborder: none;\r\n\tpadding: 1rem;\r\n\tcursor: pointer;\r\n\twidth: 100%;\r\n\topacity: 0.9;\r\n\tborder-radius: 8px;\r\n}\r\n\r\n#submit:hover {\r\n\topacity: 1;\r\n}\r\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;CACC,iBAAiB;CACjB,gBAAgB;CAChB,kBAAkB;AACnB;;AAEA;CACC,sBAAsB;CACtB,oCAAoC;AACrC;;AAEA;;CAEC,SAAS;CACT,YAAY;CACZ,WAAW;CACX,aAAa;CACb,sBAAsB;CACtB,uBAAuB;CACvB,mBAAmB;AACpB;;AAEA;CACC,aAAa;CACb,WAAW;CACX,mBAAmB;CACnB,kBAAkB;AACnB;;AAEA;CACC,UAAU;CACV,gBAAgB;AACjB;;AAEA;CACC,aAAa;CACb,WAAW;CACX,yBAAyB;CACzB,YAAY;CACZ,kBAAkB;CAClB,0BAA0B;AAC3B;;AAEA;;CAEC,kBAAkB;CAClB,kBAAkB;CAClB,WAAW;CACX,WAAW;CACX,kBAAkB;AACnB;;AAEA;CACC,mBAAmB;AACpB;;AAEA;CACC,qBAAqB;AACtB;;AAEA;CACC,WAAW;CACX,aAAa;CACb,aAAa;CACb,2BAA2B;CAC3B,kCAAkC;CAClC,0BAA0B;AAC3B;;AAEA;CACC,+BAA+B;AAChC;;AAEA;CACC,yBAAyB;CACzB,YAAY;CACZ,YAAY;CACZ,aAAa;CACb,eAAe;CACf,WAAW;CACX,YAAY;CACZ,kBAAkB;AACnB;;AAEA;CACC,UAAU;AACX",sourcesContent:[':root {\r\n\t--accent: #1b4965;\r\n\t--valid: #34d1bf;\r\n\t--invalid: #eb5160;\r\n}\r\n\r\n* {\r\n\tbox-sizing: border-box;\r\n\tfont-family: "Open Sans", sans-serif;\r\n}\r\n\r\nhtml,\r\nbody {\r\n\tmargin: 0;\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n}\r\n\r\n.input-container {\r\n\tdisplay: flex;\r\n\twidth: 100%;\r\n\tmargin-bottom: 1rem;\r\n\tposition: relative;\r\n}\r\n\r\nform {\r\n\twidth: 80%;\r\n\tmax-width: 600px;\r\n}\r\n\r\n.icon {\r\n\tpadding: 1rem;\r\n\twidth: 3rem;\r\n\tbackground: var(--accent);\r\n\tcolor: white;\r\n\ttext-align: center;\r\n\tborder-radius: 8px 0 0 8px;\r\n}\r\n\r\n.status-valid,\r\n.status-invalid {\r\n\tvisibility: hidden;\r\n\tposition: absolute;\r\n\tright: 1rem;\r\n\ttop: 0.9rem;\r\n\tfont-size: 1.25rem;\r\n}\r\n\r\n.status-valid {\r\n\tcolor: var(--valid);\r\n}\r\n\r\n.status-invalid {\r\n\tcolor: var(--invalid);\r\n}\r\n\r\n.input-field {\r\n\twidth: 100%;\r\n\tpadding: 10px;\r\n\toutline: none;\r\n\tborder: 2px solid lightgray;\r\n\tborder-left: 2px solid transparent;\r\n\tborder-radius: 0 8px 8px 0;\r\n}\r\n\r\n.input-field:focus {\r\n\tborder: 2px solid var(--accent);\r\n}\r\n\r\n#submit {\r\n\tbackground: var(--accent);\r\n\tcolor: white;\r\n\tborder: none;\r\n\tpadding: 1rem;\r\n\tcursor: pointer;\r\n\twidth: 100%;\r\n\topacity: 0.9;\r\n\tborder-radius: 8px;\r\n}\r\n\r\n#submit:hover {\r\n\topacity: 1;\r\n}\r\n'],sourceRoot:""}]);const s=o},645:t=>{t.exports=function(t){var n=[];return n.toString=function(){return this.map((function(n){var r=t(n);return n[2]?"@media ".concat(n[2]," {").concat(r,"}"):r})).join("")},n.i=function(t,r,e){"string"==typeof t&&(t=[[null,t,""]]);var i={};if(e)for(var a=0;a<this.length;a++){var o=this[a][0];null!=o&&(i[o]=!0)}for(var s=0;s<t.length;s++){var d=[].concat(t[s]);e&&i[d[0]]||(r&&(d[2]?d[2]="".concat(r," and ").concat(d[2]):d[2]=r),n.push(d))}},n}},15:t=>{function n(t,n){(null==n||n>t.length)&&(n=t.length);for(var r=0,e=new Array(n);r<n;r++)e[r]=t[r];return e}t.exports=function(t){var r,e,i=(e=4,function(t){if(Array.isArray(t))return t}(r=t)||function(t,n){var r=t&&("undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"]);if(null!=r){var e,i,a=[],o=!0,s=!1;try{for(r=r.call(t);!(o=(e=r.next()).done)&&(a.push(e.value),!n||a.length!==n);o=!0);}catch(t){s=!0,i=t}finally{try{o||null==r.return||r.return()}finally{if(s)throw i}}return a}}(r,e)||function(t,r){if(t){if("string"==typeof t)return n(t,r);var e=Object.prototype.toString.call(t).slice(8,-1);return"Object"===e&&t.constructor&&(e=t.constructor.name),"Map"===e||"Set"===e?Array.from(t):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?n(t,r):void 0}}(r,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=i[1],o=i[3];if(!o)return a;if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),d="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),c="/*# ".concat(d," */"),l=o.sources.map((function(t){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(t," */")}));return[a].concat(l).concat([c]).join("\n")}return[a].join("\n")}},379:t=>{var n=[];function r(t){for(var r=-1,e=0;e<n.length;e++)if(n[e].identifier===t){r=e;break}return r}function e(t,e){for(var a={},o=[],s=0;s<t.length;s++){var d=t[s],c=e.base?d[0]+e.base:d[0],l=a[c]||0,u="".concat(c," ").concat(l);a[c]=l+1;var A=r(u),C={css:d[1],media:d[2],sourceMap:d[3]};-1!==A?(n[A].references++,n[A].updater(C)):n.push({identifier:u,updater:i(C,e),references:1}),o.push(u)}return o}function i(t,n){var r=n.domAPI(n);return r.update(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap)return;r.update(t=n)}else r.remove()}}t.exports=function(t,i){var a=e(t=t||[],i=i||{});return function(t){t=t||[];for(var o=0;o<a.length;o++){var s=r(a[o]);n[s].references--}for(var d=e(t,i),c=0;c<a.length;c++){var l=r(a[c]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=d}}},569:t=>{var n={};t.exports=function(t,r){var e=function(t){if(void 0===n[t]){var r=document.querySelector(t);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(t){r=null}n[t]=r}return n[t]}(t);if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(r)}},216:t=>{t.exports=function(t){var n=document.createElement("style");return t.setAttributes(n,t.attributes),t.insert(n),n}},565:(t,n,r)=>{t.exports=function(t){var n=r.nc;n&&t.setAttribute("nonce",n)}},795:t=>{t.exports=function(t){var n=t.insertStyleElement(t);return{update:function(r){!function(t,n,r){var e=r.css,i=r.media,a=r.sourceMap;i?t.setAttribute("media",i):t.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(e+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(e,t)}(n,t,r)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)}}}},589:t=>{t.exports=function(t,n){if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}}},n={};function r(e){var i=n[e];if(void 0!==i)return i.exports;var a=n[e]={id:e,exports:{}};return t[e](a,a.exports,r),a.exports}r.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return r.d(n,{a:n}),n},r.d=(t,n)=>{for(var e in n)r.o(n,e)&&!r.o(t,e)&&Object.defineProperty(t,e,{enumerable:!0,get:n[e]})},r.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),(()=>{var t=r(379),n=r.n(t),e=r(795),i=r.n(e),a=r(569),o=r.n(a),s=r(565),d=r.n(s),c=r(216),l=r.n(c),u=r(589),A=r.n(u),C=r(426),p={};p.styleTagTransform=A(),p.setAttributes=d(),p.insert=o().bind(null,"head"),p.domAPI=i(),p.insertStyleElement=l(),n()(C.Z,p),C.Z&&C.Z.locals&&C.Z.locals;const m=document.getElementById("email"),v=document.getElementById("country"),f=document.getElementById("zip-code"),y=document.getElementById("password"),b=document.getElementById("confirm-password");function h(t,n){t.style.visibility="visible",n.style.visibility="hidden"}function B(t,n){t.style.visibility="hidden",n.style.visibility="visible"}m.addEventListener("input",(()=>{const t=document.querySelector("#email-container .status-invalid"),n=document.querySelector("#email-container .status-valid");m.validity.typeMismatch||m.validity.valueMissing?(h(t,n),m.setCustomValidity("Please put your email in here.")):(B(t,n),m.setCustomValidity(""))})),v.addEventListener("input",(()=>{const t=document.querySelector("#country-container .status-invalid"),n=document.querySelector("#country-container .status-valid");v.validity.patternMismatch?(h(t,n),v.setCustomValidity("Please put a valid country in here.")):v.validity.valueMissing?(h(t,n),v.setCustomValidity("Don't leave this empty.")):(B(t,n),v.setCustomValidity(""))})),f.addEventListener("input",(()=>{const t=document.querySelector("#zip-code-container .status-invalid"),n=document.querySelector("#zip-code-container .status-valid");f.validity.patternMismatch?(h(t,n),f.setCustomValidity("Only letters and numbers is allowed, at least 4 characters long.")):f.validity.valueMissing?(h(t,n),f.setCustomValidity("Don't leave this empty.")):(B(t,n),f.setCustomValidity(""))})),y.addEventListener("input",(()=>{const t=document.querySelector("#password-container .status-invalid"),n=document.querySelector("#password-container .status-valid");y.validity.patternMismatch?(h(t,n),y.setCustomValidity("Password need to be at least 8 characters long.")):y.validity.valueMissing?(h(t,n),y.setCustomValidity("You need to create your password.")):(B(t,n),y.setCustomValidity(""))})),b.addEventListener("input",(()=>{const t=document.querySelector("#confirm-password-container .status-invalid"),n=document.querySelector("#confirm-password-container .status-valid");b.value!==y.value?(h(t,n),b.setCustomValidity("This need to be the same as password above.")):(B(t,n),b.setCustomValidity(""))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,